name: ci container build

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'
    tags:
      - "v*.*.*"
env:
  TEST_TAG: ghcr.io/precimed/container_template:test
  # LATEST_TAG: ghcr.io/precimed/container_template:latest

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/container_template            
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}} 
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:docker"
          load: true
          tags: ${{ env.TEST_TAG }}
          file:
            ./dockerfiles/container_template/Dockerfile
      - name: Run unit tests
        run: |
          docker run --rm ${{ env.TEST_TAG }} 
          docker run -it -p 5001:5001 -v $PWD:/home ${{ env.TEST_TAG }} py.test -v tests

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:docker"
          push: False
          load: True
          tags: ${{ steps.meta.outputs.tags }}
          file:
            ./dockerfiles/container_template/Dockerfile
          platforms: linux/amd64
